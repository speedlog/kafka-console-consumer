name: Manual release

on:
  workflow_dispatch:

jobs:
  maven-release:
    runs-on: ubuntu-18.04
    outputs:
      RELEASE_VERSION: ${{ steps.release_version.outputs.RELEASE_VERSION }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: main
      - name: Calculate next version
        id: prepare_release_notes
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set release version in env
        id: release_version
        run: |
          echo "RELEASE_VERSION=$(echo ${{ steps.prepare_release_notes.outputs.tag_name }} | cut -c 2-)"
          echo "::set-output name=RELEASE_VERSION::$(echo ${{ steps.prepare_release_notes.outputs.tag_name }} | cut -c 2-)"
          echo "RELEASE_VERSION=$(echo ${{ steps.prepare_release_notes.outputs.tag_name }} | cut -c 2-)" >> $GITHUB_ENV
      - name: Set next version in env
        run: |
          echo "NEXT_VERSION=$(echo $RELEASE_VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')-SNAPSHOT"
          echo "NEXT_VERSION=$(echo $RELEASE_VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')-SNAPSHOT" >> $GITHUB_ENV
      - name: Release
        env:
          JAVA_HOME: /usr/lib/jvm/java-1.8-openjdk/
          CI_COMMIT_REF_NAME: main
        uses: speedlog/github-actions-maven-release@master
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          skip-perform: true
          maven-options: "-DreleaseVersion=${{ env.RELEASE_VERSION }}"
          release-branch-name: main

  upload-artifact-and-publish-release:
    runs-on: ubuntu-18.04
    needs: maven-release
    steps:
      - name: Echo release version
        run: echo "v${{ needs.maven-release.outputs.RELEASE_VERSION }}"
      - uses: actions/checkout@v2
        with:
          ref: "v${{ needs.maven-release.outputs.RELEASE_VERSION }}"
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build
        run: ./mvnw install -DskipTests
      - name: Publish release
        id: publish-release
        uses: release-drafter/release-drafter@v5
        with:
          publish: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Prepare package
        run: |
          mkdir release && cp ${{ github.workspace }}/target/kafka-consumer ${{ github.workspace }}/release/ &&
          cp ${{ github.workspace }}/src/main/resources/application-example.properties ${{ github.workspace }}/release/application.properties &&
          cd ${{ github.workspace }}/release && tar -zcvf kafka-consumer.tar.gz *
      - name: Upload to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.publish-release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/release/kafka-consumer.tar.gz
          asset_name: kafka-consumer.tar.gz
          asset_content_type: application/tar+gzip